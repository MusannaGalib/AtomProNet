Metadata-Version: 2.1
Name: VASP_Neural_Network_dataset_converter
Version: 0.1.0
Summary: A Python package for converting VASP data.
Home-page: http://example.com/nequip_converter
Author: Musanna Galib
Author-email: musannagalib@rocketmail.com
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Requires-Python: >=3.6
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: numpy
Requires-Dist: ase


# Nequip Converter Package

This package demonstrates a simple data processing workflow involving a Bash script, a Python conversion script, and a final Python processing script.

## Workflow Overview

1. **Bash Script (`dummy_script.sh`):**
   - Takes a user-provided file path, copies the content to a new file, and appends additional text.
   - Outputs the path of the new file.

2. **Python Converter (`converter.py`):**
   - Processes the file generated by the Bash script.
   - Performs a simple transformation (reversing the content) and writes to another file.
   - Outputs the path of the transformed file.

3. **Final Python Processor (`final_processor.py`):**
   - Takes the output from `converter.py` and performs a final operation (counting characters).
   - Writes the character count to a new file.

## Using the Package

To use this package, run the Bash script with an input file, then pass the output file path to the Python scripts:

```bash
# Run the Bash script
bash scripts/dummy_script.sh path/to/input_file.txt
```

```python
# In Python, use the converter and final processor
from nequip_converter.converter import process_bash_output
from nequip_converter.final_processor import final_processing

# Path to the file generated by the Bash script
bash_output_file = 'path/to/bash_output_file.txt'

# Process the file with the converter
converter_output = process_bash_output(bash_output_file)

# Perform the final processing
final_output = final_processing(converter_output)
```

This workflow demonstrates a basic data processing pipeline using both Bash and Python scripts.





# Nequip Converter Package

## Installation and Usage Guide

This guide provides detailed instructions on how to install and use the Nequip Converter package.

### Prerequisites
- Python 3.6 or later
- Pip (Python package manager)

### Installation
1. **Download the Package:**
   - Download the zip file containing the Nequip Converter package.
   - Extract the zip file to a directory of your choice.

2. **Install the Package:**
   - Open a command prompt or terminal.
   - Navigate to the directory where you extracted the package.
   - Install the package by running the command:
     ```
     pip install .
     ```
   This command installs the package along with its dependencies.

### Running Tests (Optional)
1. **Install Pytest (if not already installed):**
   - Install `pytest` by running:
     ```
     pip install pytest
     ```

2. **Run the Tests:**
   - In the command prompt or terminal, ensure you are in the directory where the package is located.
   - Execute the test scripts by running:
     ```
     pytest
     ```

### Using the Package
1. **Import in Python:**
   - Use the package in your Python scripts or in a Python interactive shell.
   - Import the package or specific functions using:
     ```python
     from nequip_converter import <function_name>
     ```
   Replace `<function_name>` with the function you wish to use.

2. **Run Specific Scripts:**
   - To run specific Python scripts in the package:
     - Navigate to the package directory.
     - Run the script using Python:
       ```
       python -m nequip_converter.<script_name>
       ```
     Replace `<script_name>` with the actual script name.

### Example Usage
```python
from nequip_converter import convert_npz_to_extxyz
convert_npz_to_extxyz('path/to/input_file.npz', 'output_file.xyz')
```
Replace 'path/to/input_file.npz' with the path to your `.npz` file and 'output_file.xyz' with the desired output file name.


## Citing This Work
If you use this software in your research, please cite the following paper:

[Your Paper Title](link to your paper)
Author Name. "Title of Your Paper." Journal/Conference, Year.

BibTeX entry:
@article{YourPaper,
  title={Title of Your Paper},
  author={Your Name},
  journal={Journal/Conference},
  year={Year},
  publisher={Publisher}
}

